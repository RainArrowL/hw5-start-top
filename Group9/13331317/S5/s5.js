// Generated by LiveScript 1.3.1
var data, GetRandomNumber, Check, RandomOrder, preset, nextClicking, checkIfSuccess, bubblfuce, fuca, fucb, fucc, fucd, fuce, jiqiren, reset;
$(function(){
  reset();
  preset();
});
data = {
  good_mes: ["这是个天大的秘密", "我不知道", "你不知道", "他不知道", "才怪"],
  bad_mes: ["这不是个天大的秘密", "我知道", "你知道", "他知道", "才不怪"],
  arise: 0,
  used: [0, 0, 0, 0, 0, 0],
  order: [-1, -1, -1, -1, -1],
  can_start: 1,
  interrupt: 0,
  sum: 0,
  click_num: 0
};
GetRandomNumber = function(limit){
  return Math.round(Math.random() * limit);
};
Check = function(){
  var flag, i$, i;
  flag = 1;
  for (i$ = 1; i$ <= 5; ++i$) {
    i = i$;
    if (data.used[i] === 0) {
      flag = 0;
    }
  }
  return flag;
};
RandomOrder = function(){
  var position, num;
  data.used = [0, 0, 0, 0, 0, 0];
  data.order = [-1, -1, -1, -1, -1];
  data.order_list = "";
  position = 0;
  num;
  while (Check() === 0) {
    num = GetRandomNumber(4) + 1;
    if (data.used[num] === 0) {
      data.used[num] = 1;
      data.order[position] = num;
      position++;
    }
  }
};
preset = function(){
  var a_plus, buttons, randomNum, i$, i;
  a_plus = document.getElementById("button");
  buttons = document.getElementsByTagName("ul");
  randomNum = buttons[1].getElementsByTagName("li");
  for (i$ = 0; i$ <= 4; ++i$) {
    i = i$;
    randomNum[i].style.background = "#0044BB";
  }
  a_plus.onmouseover = function(){
    var area_, click_area_;
    this.id = "button_hover";
    area_ = document.getElementsByTagName("div")[0];
    area_.onmouseover = function(){
      this.id = "area";
      this.onmouseout = function(){
        var x, y, areax1, areax2, areay1, areay2;
        x = event.clientX;
        y = event.clientY;
        areax1 = this.offsetLeft;
        areax2 = this.offsetLeft + 350;
        areay1 = this.offsetTop;
        areay2 = this.offsetTop + 350;
        if (x >= areax2 || x < areax1 || y < areay1 || y >= areay2) {
          reset();
        }
      };
    };
    click_area_ = document.getElementById("click_area");
    click_area_.onclick = function(){
      if (data.can_start === 1) {
        RandomOrder();
        data.can_start = 0;
        data.interrupt = 0;
        jiqiren();
      }
    };
  };
};
nextClicking = function(){
  if (data.order[data.click_num] - 1 === 0) {
    fuca();
  }
  if (data.order[data.click_num] - 1 === 1) {
    fucb();
  }
  if (data.order[data.click_num] - 1 === 2) {
    fucc();
  }
  if (data.order[data.click_num] - 1 === 3) {
    fucd();
  }
  if (data.order[data.click_num] - 1 === 4) {
    fuce();
  }
};
checkIfSuccess = function(){
  var num;
  num = GetRandomNumber(9) + 1;
  if (num > 4) {
    return 1;
  } else {
    return 0;
  }
};
bubblfuce = function(){
  var buttons, ring_numbers;
  buttons = document.getElementsByTagName("ul");
  ring_numbers = buttons[0].getElementsByTagName("li");
  ring_numbers[0].style.background = "#0044BB";
  ring_numbers[0].canclick = 1;
  if (ring_numbers[0].canclick === 1) {
    ring_numbers[0].innerHTML = data.sum;
    ring_numbers[0].style.fontSize = 300 + "%";
  }
};
fuca = function(){
  var buttons, randomNum, ring_numbers, r, xmlHttpReg, can, i$, l;
  if (data.click_num < 5) {
    buttons = document.getElementsByTagName("ul");
    randomNum = buttons[1].getElementsByTagName("li");
    ring_numbers = buttons[0].getElementsByTagName("li");
    data.arise = 0;
    randomNum[0].have_number = 1;
    r = randomNum[0].getElementsByTagName("span")[0];
    r.style.display = "inline";
    r.innerHTML = "...";
    xmlHttpReg = null;
    can = checkIfSuccess();
    if (can === 1) {
      ring_numbers[0].innerHTML = data.good_mes[0];
    } else {
      ring_numbers[0].innerHTML = "error: " + data.bad_mes[0];
    }
    for (i$ = 0; i$ <= 4; ++i$) {
      l = i$;
      randomNum[l].style.background = "#666666";
      randomNum[l].canclick = 0;
    }
    xmlHttpReg = new XMLHttpRequest();
    if (xmlHttpReg !== null) {
      xmlHttpReg.open("get", "/", true);
      xmlHttpReg.send();
      xmlHttpReg.onreadystatechange = function(){
        var i$, l;
        if (xmlHttpReg.readyState === 4 && xmlHttpReg.status === 200) {
          if (data.interrupt === 1) {
            data.arise = 1;
            reset();
            return;
          }
          if (can === 1) {
            r.innerHTML = xmlHttpReg.responseText;
            data.sum += parseInt(r.innerHTML);
            for (i$ = 0; i$ <= 4; ++i$) {
              l = i$;
              if (randomNum[l].have_number === 0) {
                randomNum[l].style.background = "#0044BB";
                randomNum[l].canclick = 1;
              }
            }
            if (data.click_num === 4) {
              data.arise = 1;
              bubblfuce();
            }
            data.click_num++;
            nextClicking();
          } else {
            fuca();
          }
        }
      };
    }
  }
};
fucb = function(){
  var buttons, randomNum, ring_numbers, r, xmlHttpReg, can, i$, l;
  if (data.click_num < 5) {
    buttons = document.getElementsByTagName("ul");
    randomNum = buttons[1].getElementsByTagName("li");
    ring_numbers = buttons[0].getElementsByTagName("li");
    data.arise = 0;
    randomNum[1].have_number = 1;
    r = randomNum[1].getElementsByTagName("span")[0];
    r.style.display = "inline";
    r.innerHTML = "...";
    xmlHttpReg = null;
    can = checkIfSuccess();
    if (can === 1) {
      ring_numbers[0].innerHTML = data.good_mes[1];
    } else {
      ring_numbers[0].innerHTML = "error: " + data.bad_mes[1];
    }
    for (i$ = 0; i$ <= 4; ++i$) {
      l = i$;
      randomNum[l].style.background = "#666666";
      randomNum[l].canclick = 0;
    }
    xmlHttpReg = new XMLHttpRequest();
    if (xmlHttpReg !== null) {
      xmlHttpReg.open("get", "/", true);
      xmlHttpReg.send();
      xmlHttpReg.onreadystatechange = function(){
        var i$, l;
        if (xmlHttpReg.readyState === 4 && xmlHttpReg.status === 200) {
          if (data.interrupt === 1) {
            data.arise = 1;
            reset();
            return;
          }
          if (can === 1) {
            r.innerHTML = xmlHttpReg.responseText;
            data.sum += parseInt(r.innerHTML);
            for (i$ = 0; i$ <= 4; ++i$) {
              l = i$;
              if (randomNum[l].have_number === 0) {
                randomNum[l].style.background = "#0044BB";
                randomNum[l].canclick = 1;
              }
            }
            if (data.click_num === 4) {
              data.arise = 1;
              bubblfuce();
            }
            data.click_num++;
            nextClicking();
          } else {
            fucb();
          }
        }
      };
    }
  }
};
fucc = function(){
  var buttons, randomNum, ring_numbers, r, xmlHttpReg, can, i$, l;
  if (data.click_num < 5) {
    buttons = document.getElementsByTagName("ul");
    randomNum = buttons[1].getElementsByTagName("li");
    ring_numbers = buttons[0].getElementsByTagName("li");
    data.arise = 0;
    randomNum[2].have_number = 1;
    r = randomNum[2].getElementsByTagName("span")[0];
    r.style.display = "inline";
    r.innerHTML = "...";
    xmlHttpReg = null;
    can = checkIfSuccess();
    if (can === 1) {
      ring_numbers[0].innerHTML = data.good_mes[2];
    } else {
      ring_numbers[0].innerHTML = "error: " + data.bad_mes[2];
    }
    for (i$ = 0; i$ <= 4; ++i$) {
      l = i$;
      randomNum[l].style.background = "#666666";
      randomNum[l].canclick = 0;
    }
    xmlHttpReg = new XMLHttpRequest();
    if (xmlHttpReg !== null) {
      xmlHttpReg.open("get", "/", true);
      xmlHttpReg.send();
      xmlHttpReg.onreadystatechange = function(){
        var i$, l;
        if (xmlHttpReg.readyState === 4 && xmlHttpReg.status === 200) {
          if (data.interrupt === 1) {
            data.arise = 1;
            reset();
            return;
          }
          if (can === 1) {
            r.innerHTML = xmlHttpReg.responseText;
            data.sum += parseInt(r.innerHTML);
            for (i$ = 0; i$ <= 4; ++i$) {
              l = i$;
              if (randomNum[l].have_number === 0) {
                randomNum[l].style.background = "#0044BB";
                randomNum[l].canclick = 1;
              }
            }
            if (data.click_num === 4) {
              data.arise = 1;
              bubblfuce();
            }
            data.click_num++;
            nextClicking();
          } else {
            fucc();
          }
        }
      };
    }
  }
};
fucd = function(){
  var buttons, randomNum, ring_numbers, r, xmlHttpReg, can, i$, l;
  if (data.click_num < 5) {
    buttons = document.getElementsByTagName("ul");
    randomNum = buttons[1].getElementsByTagName("li");
    ring_numbers = buttons[0].getElementsByTagName("li");
    data.arise = 0;
    randomNum[3].have_number = 1;
    r = randomNum[3].getElementsByTagName("span")[0];
    r.style.display = "inline";
    r.innerHTML = "...";
    xmlHttpReg = null;
    can = checkIfSuccess();
    if (can === 1) {
      ring_numbers[0].innerHTML = data.good_mes[3];
    } else {
      ring_numbers[0].innerHTML = "error: " + data.bad_mes[3];
    }
    for (i$ = 0; i$ <= 4; ++i$) {
      l = i$;
      randomNum[l].style.background = "#666666";
      randomNum[l].canclick = 0;
    }
    xmlHttpReg = new XMLHttpRequest();
    if (xmlHttpReg !== null) {
      xmlHttpReg.open("get", "/", true);
      xmlHttpReg.send();
      xmlHttpReg.onreadystatechange = function(){
        var i$, l;
        if (xmlHttpReg.readyState === 4 && xmlHttpReg.status === 200) {
          if (data.interrupt === 1) {
            data.arise = 1;
            reset();
            return;
          }
          if (can === 1) {
            r.innerHTML = xmlHttpReg.responseText;
            data.sum += parseInt(r.innerHTML);
            for (i$ = 0; i$ <= 4; ++i$) {
              l = i$;
              if (randomNum[l].have_number === 0) {
                randomNum[l].style.background = "#0044BB";
                randomNum[l].canclick = 1;
              }
            }
            if (data.click_num === 4) {
              data.arise = 1;
              bubblfuce();
            }
            data.click_num++;
            nextClicking();
          } else {
            fucd();
          }
        }
      };
    }
  }
};
fuce = function(){
  var buttons, randomNum, ring_numbers, r, xmlHttpReg, can, i$, l;
  if (data.click_num < 5) {
    buttons = document.getElementsByTagName("ul");
    randomNum = buttons[1].getElementsByTagName("li");
    ring_numbers = buttons[0].getElementsByTagName("li");
    data.arise = 0;
    randomNum[4].have_number = 1;
    r = randomNum[4].getElementsByTagName("span")[0];
    r.style.display = "inline";
    r.innerHTML = "...";
    xmlHttpReg = null;
    can = checkIfSuccess();
    if (can === 1) {
      ring_numbers[0].innerHTML = data.good_mes[4];
    } else {
      ring_numbers[0].innerHTML = "error: " + data.bad_mes[4];
    }
    for (i$ = 0; i$ <= 4; ++i$) {
      l = i$;
      randomNum[l].style.background = "#666666";
      randomNum[l].canclick = 0;
    }
    xmlHttpReg = new XMLHttpRequest();
    if (xmlHttpReg !== null) {
      xmlHttpReg.open("get", "/", true);
      xmlHttpReg.send();
      xmlHttpReg.onreadystatechange = function(){
        var i$, l;
        if (xmlHttpReg.readyState === 4 && xmlHttpReg.status === 200) {
          if (data.interrupt === 1) {
            data.arise = 1;
            reset();
            return;
          }
          if (can === 1) {
            r.innerHTML = xmlHttpReg.responseText;
            data.sum += parseInt(r.innerHTML);
            for (i$ = 0; i$ <= 4; ++i$) {
              l = i$;
              if (randomNum[l].have_number === 0) {
                randomNum[l].style.background = "#0044BB";
                randomNum[l].canclick = 1;
              }
            }
            if (data.click_num === 4) {
              data.arise = 1;
              bubblfuce();
            }
            data.click_num++;
            nextClicking();
          } else {
            fuce();
          }
        }
      };
    }
  }
};
jiqiren = function(){
  var buttons, randomNum, i$, i, r_sum;
  buttons = document.getElementsByTagName("ul");
  randomNum = buttons[1].getElementsByTagName("li");
  for (i$ = 0; i$ <= 4; ++i$) {
    i = i$;
    randomNum[i].canclick = 1;
    randomNum[i].have_number = 0;
  }
  r_sum = buttons[0].getElementsByTagName("li");
  r_sum[0].canclick = 0;
  r_sum[0].style.fontSize = 100 + "%";
  for (i$ = 0; i$ <= 4; ++i$) {
    i = i$;
    randomNum[i].style.background = "#0044BB";
  }
  nextClicking();
};
reset = function(){
  var a_plus, area_, buttons, randomNum, i$, i, r;
  data.interrupt = 1;
  data.sum = 0;
  data.click_num = 0;
  if (data.arise === 1) {
    data.can_start = 1;
  }
  a_plus = document.getElementsByTagName("div")[2];
  a_plus.id = "button";
  area_ = document.getElementsByTagName("div")[0];
  area_.id = "at-plus-container";
  buttons = document.getElementsByTagName("ul");
  randomNum = buttons[1].getElementsByTagName("li");
  for (i$ = 0; i$ <= 4; ++i$) {
    i = i$;
    randomNum[i].canclick = 1;
    randomNum[i].have_number = 0;
    randomNum[i].style.background = "#0044BB";
    r = randomNum[i].getElementsByTagName("span")[0];
    r.style.display = "none";
  }
  randomNum = buttons[0].getElementsByTagName("li");
  randomNum[0].style.background = "#666666";
  randomNum[0].innerHTML = "";
  randomNum[0].canclick = 0;
};